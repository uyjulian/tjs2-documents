<?xml version="1.0" encoding="UTF-8" ?>
<doc>
<title>switch ステートメント</title>

<para>
<ptitle>switch ステートメント </ptitle>
　switch ステートメントを使うと、if 縲鰀 else if を簡潔に書くことができます。以下の構文をとります。<r/>
<bq>
switch(base_expression)<r/>
{<r/>
<kw>case</kw> condition_expression1 :<r/>
<r/>
case condition_expression2 :<r/>
<r/>
:<r/>
:<r/>
<r/>
<kw>default</kw>:<r/>
<r/>
:<r/>
:<r/>
}<r/>
</bq>
<r/>
　base_expression には式を書き、最初にこの式が評価されます。switch の次のブロックの中の case の次の condition_expression? にも式を書きます。<r/>
　condition_expression? はブロック内で次々に評価されます。評価された結果が base_expression と同じ場合、そこから実行が開始されます。condition_expression? に合致しない場合は、その間にかかれた文やステートメントは無視されます。また、合致した場合、それ以降、case や default は無視されます。<r/>
　default: は省略できますが、default がかかれた場合は強制的に default 以降の文やステートメントが実行されます。<r/>
　ブロックを抜けるには <kw>break</kw>; を書きます。break を書き忘れて、次の case の内容まで実行してしまうのはよくあることなので注意してください。<r/>
<r/>
<example>
	switch(a)<r/>
	{<r/>
	case 0:<r/>
		inform("a は 0 です");<r/>
		break;<r/>
	case 1:<r/>
		inform("b は 1 です");<r/>
		break;<r/>
	case 2:<r/>
		inform("b は 2 です");<r/>
		break;<r/>
	default:<r/>
		inform("b は 0 でも 1 でも 2 でもありません");<r/>
	}<r/>
<r/>
<r/>
	switch(a)<r/>
	{<r/>
	case 0:<r/>
	case 1: // break がないので case 0 の場合はここを通過する<r/>
		inform("a は 0 か 1 です");<r/>
		break;<r/>
	case 2:<r/>
		inform("a は 2 です");<r/>
	} // default がないので 0 1 2 以外の場合はなにも実行されない<r/>
<r/>
<r/>
	switch(a)<r/>
	{<r/>
	case b+1: // case の後には式も指定できる<r/>
		inform("a==b+1");<r/>
		break;<r/>
	case c+b:<r/>
		inform("a==c+b");<r/>
	}<r/>
<r/>
	switch(str)<r/>
	{<r/>
	case "あいうえお": // 文字列も指定できる<r/>
		type=1;<r/>
		break;<r/>
	case "かきくけこ":<r/>
		type=2;<r/>
		break;<r/>
	}<r/>
</example>

</para>
</doc>
