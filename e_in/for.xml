<?xml version="1.0" encoding="UTF-8" ?>
<doc>
<title>for statement</title>

<para>
<ptitle>for statement</ptitle>
　The <tt>for</tt> statement is similar to the <tt>while</tt> statement, but is more complex.<r/>
The syntax is as follows.<r/>
<tt>
for(section1; section2; section3)
	Statement or block
</tt>
<r/>
　Here, in the first section, specify the expression you want to execute before entering the loop. Variable declarations can also be made here, and the variables declared here are valid throughout the loop (they are deleted when the loop is exited). It can be omitted.<r/>
<r/>
　In the second section, specify a conditional expression. The statement or block is executed repeatedly while this conditional expression is <tt>true</tt>. If omitted, it is always assumed to be true.<r/>
<r/>
　Section 3 specifies the expression that you want to execute at the end of the statement or block. It can be omitted.<r/>
<r/>
　In operation,<r/>
(1) First, execute Section 1<r/>
(2) Evaluate section 2; if false, end statement or block without evaluation<r/>
(3) Execute the statement or block<r/>
(4) Execute Section 3<r/>
(5) Evaluate Section 2 and exit from loop if false<r/>
(6) Repeat from (3)<r/>
<r/>
　If there is a <tt><kw>break</kw></tt> statement in the block, break out of the loop at that point. If there is a <tt><kw>continue</kw></tt> statement, jump to (4).<r/>
<r/>
<example>
	var i,a=1;<r/>
	for(i=1;i&lt;5;i++)<r/>
	{<r/>
		a*=i;<r/>
	}<r/>
<r/>
	var i;<r/>
	for(i=0;i&lt;10;i++)<r/>
	{<r/>
		if(obj[i]==0) continue; // i++ is executed even if continue<r/>
		if(obj[i]==1) break; // break to exit on the spot<r/>
		func(obj[i]);<r/>
	}<r/>
</example>
</para>
</doc>
